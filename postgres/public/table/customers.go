//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Customers = newCustomersTable("public", "customers", "")

type customersTable struct {
	postgres.Table

	//Columns
	CustomerID   postgres.ColumnInteger
	CustomerName postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CustomersTable struct {
	customersTable

	EXCLUDED customersTable
}

// AS creates new CustomersTable with assigned alias
func (a CustomersTable) AS(alias string) *CustomersTable {
	return newCustomersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CustomersTable with assigned schema name
func (a CustomersTable) FromSchema(schemaName string) *CustomersTable {
	return newCustomersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CustomersTable with assigned table prefix
func (a CustomersTable) WithPrefix(prefix string) *CustomersTable {
	return newCustomersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CustomersTable with assigned table suffix
func (a CustomersTable) WithSuffix(suffix string) *CustomersTable {
	return newCustomersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCustomersTable(schemaName, tableName, alias string) *CustomersTable {
	return &CustomersTable{
		customersTable: newCustomersTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newCustomersTableImpl("", "excluded", ""),
	}
}

func newCustomersTableImpl(schemaName, tableName, alias string) customersTable {
	var (
		CustomerIDColumn   = postgres.IntegerColumn("customer_id")
		CustomerNameColumn = postgres.StringColumn("customer_name")
		allColumns         = postgres.ColumnList{CustomerIDColumn, CustomerNameColumn}
		mutableColumns     = postgres.ColumnList{CustomerNameColumn}
	)

	return customersTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CustomerID:   CustomerIDColumn,
		CustomerName: CustomerNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
